---
title: "Naive Bayes Breast Cancer"
format: html
editor: visual
---

## Dataset & Paper:

The ***Breast Cancer Wisconsin (Diagnostic)*** dataset is a renowned collection of data used extensively in machine learning and medical research. Originating from digitized images of fine needle aspirates (FNA) of breast masses, this dataset facilitates the analysis of cell nuclei characteristics to aid in the diagnosis of breast cancer. In this article, we delve into the attributes, statistics, and significance of this dataset.

[*A new classifier for breast cancer detection based on Na√Øve Bayesian*](https://www.sciencedirect.com/science/article/abs/pii/S0263224115002419)

### Libraries

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(e1071)
library(here)
library(ggcorrplot)
library(ggpubr)
```

### Read in Data

```{r}
breast_cancer_data <- read_csv(here("data/wisconsin_breast_cancer_data.csv"))
```

### Correlation Matrix

Let's test the assumption that our features are independent from each other.

```{r}
#> Dropping columns we dont need from the correlation matrix
breast_cancer_data_core <- breast_cancer_data %>%
  select(-id, -diagnosis, -...33)
```

### Create matrix from new dataframe

```{r}
breast_cancer_matrix <- as.matrix(breast_cancer_data_core) 
```

### Calculate correlations using *`cor()`*

```{r}
breast_cancer_correlations <- cor(breast_cancer_matrix)
```

## Plotting Correlations

```{r}
ggcorrplot(breast_cancer_correlations, 
           method = "square", 
           type = "lower", 
           lab = TRUE, 
           lab_size = 1)
```

### Visualizing correlations between 2 features

```{r}
ggplot(breast_cancer_data, aes(x = radius_mean, y = perimeter_mean)) +
  geom_point() +
  geom_smooth() +
  stat_cor()
```

### Create a Naive Bayes Model

```{r}
#> Creating a Naive Bayes Model
breast_cancer_model <- naiveBayes(diagnosis ~., data = breast_cancer_data)
```

## Predicting diagnosis in breast cancer dataset

```{r}
breast_cancer_data <- breast_cancer_data %>%
  mutate(predicted_diagnosis = predict(breast_cancer_model, 
                                       newdata = .)) 
# Mutate means adding a new column to dataset
```

### Creating the confusion matrix

```{r}
breast_cancer_data %>%
  tabyl(diagnosis, predicted_diagnosis) %>%
  adorn_percentages("row") %>%
  adorn_pct_formatting(digits = 2) %>%
  adorn_ns
```

#\> 96% and 89% are good high numbers (representing accuracy) but in the context of:

-   False data = our data confusion matrix becomes inaccurate

-   A false positive using our confusion matrix could mean **death** for a real person (because of the incorrect treatment due to incorrect diagnosis)
